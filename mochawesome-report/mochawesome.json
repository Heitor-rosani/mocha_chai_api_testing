{
  "stats": {
    "suites": 7,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-02T13:45:48.536Z",
    "end": "2023-05-02T13:45:57.981Z",
    "duration": 9445,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "91def4b5-7d03-4872-aa55-d5cbc65a7db8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook",
          "fullTitle": "\"before all\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "userId = await userCreator();",
          "err": {},
          "uuid": "4650a7a2-beb6-48c6-a28f-5d6cb194ce3b",
          "parentUUID": "91def4b5-7d03-4872-aa55-d5cbc65a7db8",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eec38d00-374e-44b3-92d9-80cc3fc03008",
          "title": "Test Suite Posts",
          "fullFile": "C:\\apiJsTest\\test\\posts.js",
          "file": "\\test\\posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6499e2ae-c831-4bca-b644-2cf8a532c5e5",
              "title": "POST a post",
              "fullFile": "C:\\apiJsTest\\test\\posts.js",
              "file": "\\test\\posts.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "POST",
                  "fullTitle": "Test Suite Posts POST a post POST",
                  "timedOut": false,
                  "duration": 1264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request\n  .post('posts')\n  .set('Authorization', TOKEN)\n  .send(data);\nexpect(res.statusCode).to.be.eql(201)\nexpect(res.body).to.deep.include(data)\nuserId = res.body.id",
                  "err": {},
                  "uuid": "4487c6a1-e07b-498c-bc5c-abdbb9a02da2",
                  "parentUUID": "6499e2ae-c831-4bca-b644-2cf8a532c5e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4487c6a1-e07b-498c-bc5c-abdbb9a02da2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1264,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d3f3d07e-1ef6-47a8-b239-230427942a3b",
              "title": "GET post",
              "fullFile": "C:\\apiJsTest\\test\\posts.js",
              "file": "\\test\\posts.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "GET All",
                  "fullTitle": "Test Suite Posts GET post GET All",
                  "timedOut": false,
                  "duration": 1234,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request\n  .get('/posts')\n  .set('Authorization', TOKEN)\nexpect(res.statusCode).to.be.eql(200)",
                  "err": {},
                  "uuid": "3e3abe8f-4501-4438-a04f-dda2ffbf7ad7",
                  "parentUUID": "d3f3d07e-1ef6-47a8-b239-230427942a3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "GET post by Id",
                  "fullTitle": "Test Suite Posts GET post GET post by Id",
                  "timedOut": false,
                  "duration": 1185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request\n  .get(`/posts/${userId}`)\n  .set('Authorization', TOKEN)\nexpect(res.statusCode).to.be.eql(200)\nexpect(res.body).to.deep.include(data)",
                  "err": {},
                  "uuid": "5b961d71-b3b8-4ba9-9e55-22b4b70f490a",
                  "parentUUID": "d3f3d07e-1ef6-47a8-b239-230427942a3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e3abe8f-4501-4438-a04f-dda2ffbf7ad7",
                "5b961d71-b3b8-4ba9-9e55-22b4b70f490a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2419,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "23da01d0-604c-47ba-ae7e-d7285284f868",
          "title": "Tests suite users",
          "fullFile": "C:\\apiJsTest\\test\\users.js",
          "file": "\\test\\users.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a9e3b193-38a8-4a6b-a60f-4f0f4daaa06b",
              "title": "DELETE User",
              "fullFile": "C:\\apiJsTest\\test\\users.js",
              "file": "\\test\\users.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"DELETE User\"",
                  "fullTitle": "Tests suite users DELETE User \"before all\" hook in \"DELETE User\"",
                  "timedOut": false,
                  "duration": 1147,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userId = await userCreator();",
                  "err": {},
                  "uuid": "db7d5289-8d79-405a-9a26-facaa902692f",
                  "parentUUID": "a9e3b193-38a8-4a6b-a60f-4f0f4daaa06b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should delete the user",
                  "fullTitle": "Tests suite users DELETE User Should delete the user",
                  "timedOut": false,
                  "duration": 1206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "before(async () => {\n  userId = await userCreator();\n})\nconst resp = await request\n  .delete(`users/${userId}`)\n  .set('Authorization', token);\nexpect(resp.statusCode).to.be.eql(204);",
                  "err": {},
                  "uuid": "8f444a33-23cd-4068-9371-209526473104",
                  "parentUUID": "a9e3b193-38a8-4a6b-a60f-4f0f4daaa06b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f444a33-23cd-4068-9371-209526473104"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "ca238f14-3e9e-4901-8d32-93111d33b538",
              "title": "GET User",
              "fullFile": "C:\\apiJsTest\\test\\users.js",
              "file": "\\test\\users.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should get by id",
                  "fullTitle": "Tests suite users GET User Should get by id",
                  "timedOut": false,
                  "duration": 515,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request\n  .get(`users?page=${numberGender[0]}&gender=${numberGender[1]}`)\n  .set('Authorization', token);\nres.body.forEach(element => {\n  expect(element.name).to.be.a('string');\n  expect(element.id).not.to.be.a('string');\n  expect(element.gender).to.be.eql(numberGender[1]);\n});",
                  "err": {},
                  "uuid": "44e84500-0114-4d49-b38c-53dabf17d777",
                  "parentUUID": "ca238f14-3e9e-4901-8d32-93111d33b538",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44e84500-0114-4d49-b38c-53dabf17d777"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 515,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "aee15a74-5fdf-4472-802c-d78ccc0fcbe0",
              "title": "PUT data user",
              "fullFile": "C:\\apiJsTest\\test\\users.js",
              "file": "\\test\\users.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "GET User ID",
                  "fullTitle": "Tests suite users PUT data user GET User ID",
                  "timedOut": false,
                  "duration": 1178,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request\n  .get(`users?page=${numberGender[0]}&gender=${numberGender[1]}`)\n  .set('Authorization', token);\nexpect(res.statusCode).to.be.eql(200);\nuserId = res.body[0].id;",
                  "err": {},
                  "uuid": "b41e5a63-79d8-4a8d-8c46-fbe5add71415",
                  "parentUUID": "aee15a74-5fdf-4472-802c-d78ccc0fcbe0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "PUT User",
                  "fullTitle": "Tests suite users PUT data user PUT User",
                  "timedOut": false,
                  "duration": 1698,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = dataChanger();\n   const resp = await request\n     .put(`users/${userId}`)\n     .set('Authorization', token)\n     .send(data);\n   expect(resp.statusCode).to.be.eql(200);\n   const res_put = await request\n     .get(`users/${userId}`)\n     .set('Authorization', token);\n   expect(res_put.statusCode).to.be.eql(200);\n   expect(res_put.body.name).to.be.eql(data.name);\n   expect(res_put.body.email).to.be.eql(data.email);",
                  "err": {},
                  "uuid": "9ea2a36f-8d81-47be-b3b5-65671cf2ebff",
                  "parentUUID": "aee15a74-5fdf-4472-802c-d78ccc0fcbe0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b41e5a63-79d8-4a8d-8c46-fbe5add71415",
                "9ea2a36f-8d81-47be-b3b5-65671cf2ebff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2876,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}